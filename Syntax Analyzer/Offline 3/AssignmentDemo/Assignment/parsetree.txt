start : program 	<Line: 1-5>
 program : program unit 	<Line: 1-5>
  program : unit 	<Line: 1-1>
   unit : var_declaration 	<Line: 1-1>
    var_declaration : type_specifier declaration_list SEMICOLON 	<Line: 1-1>
     type_specifier : INT 	<Line: 1-1>
      INT : int	<Line: 1>
     declaration_list : ID 	<Line: 1-1>
      ID : x	<Line: 1>
     SEMICOLON : ;	<Line: 1>
  unit : func_definition 	<Line: 3-5>
   func_definition : type_specifier ID LPAREN RPAREN compound_statement 	<Line: 3-5>
    type_specifier : INT 	<Line: 3-3>
     INT : int	<Line: 3>
    ID : main	<Line: 3>
    LPAREN : (	<Line: 3>
    RPAREN : )	<Line: 3>
    compound_statement : LCURL statements RCURL 	<Line: 3-5>
     LCURL : {	<Line: 3>
     statements : statement 	<Line: 4-4>
      statement : expression_statement 	<Line: 4-4>
       expression_statement : expression SEMICOLON 	<Line: 4-4>
        expression : logic_expression 	<Line: 4-4>
         logic_expression : rel_expression 	<Line: 4-4>
          rel_expression : simple_expression 	<Line: 4-4>
           simple_expression : term 	<Line: 4-4>
            term : unary_expression 	<Line: 4-4>
             unary_expression : factor 	<Line: 4-4>
              factor : variable 	<Line: 4-4>
               variable : ID 	<Line: 4-4>
                ID : a	<Line: 4>
        SEMICOLON : ;	<Line: 4>
     RCURL : }	<Line: 5>
