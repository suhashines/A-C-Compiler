start : program 	<Line : 1-7>
 program : program unit 	<Line : 1-7>
  program : unit 	<Line : 1-1>
   unit : var_declaration 	<Line : 1-1>
    var_declaration : type_specifier declaration_list SEMICOLON 	<Line : 1-1>
     type_specifier : INT 	<Line : 1-1>
      INT : int	<Line : 1>
     declaration_list : ID 	<Line : 1-1>
      ID : x	<Line : 1>
     SEMICOLON : ;	<Line : 1>
  unit : func_definition 	<Line : 3-7>
   func_definition : type_specifier ID LPAREN RPAREN compound_statement 	<Line : 3-7>
    type_specifier : INT 	<Line : 3-3>
     INT : int	<Line : 3>
    ID : main	<Line : 3>
    LPAREN : (	<Line : 3>
    RPAREN : )	<Line : 3>
    compound_statement : LCURL statements RCURL 	<Line : 3-7>
     LCURL : {	<Line : 3>
     statements : statements statement 	<Line : 4-6>
      statements : statement 	<Line : 4-4>
       statement : var_declaration 	<Line : 4-4>
        var_declaration : type_specifier declaration_list SEMICOLON 	<Line : 4-4>
         type_specifier : INT 	<Line : 4-4>
          INT : int	<Line : 4>
         declaration_list : ID LSQUARE CONST_INT RSQUARE 	<Line : 4-4>
          ID : a	<Line : 4>
          LSQUARE : [	<Line : 4>
          CONST_INT : 10	<Line : 4>
          RSQUARE : ]	<Line : 4>
         SEMICOLON : ;	<Line : 4>
      statement : expression_statement 	<Line : 6-6>
       expression_statement : expression SEMICOLON 	<Line : 6-6>
        expression : variable ASSIGNOP logic_expression 	<Line : 6-6>
         variable : ID LSQUARE expression RSQUARE 	<Line : 6-6>
          ID : a	<Line : 6>
          LSQUARE : [	<Line : 6>
          expression : logic_expression 	<Line : 6-6>
           logic_expression : rel_expression 	<Line : 6-6>
            rel_expression : simple_expression 	<Line : 6-6>
             simple_expression : term 	<Line : 6-6>
              term : unary_expression 	<Line : 6-6>
               unary_expression : factor 	<Line : 6-6>
                factor : CONST_FLOAT 	<Line : 6-6>
                 CONST_FLOAT : 2.5	<Line : 6>
          RSQUARE : ]	<Line : 6>
         ASSIGNOP : =	<Line : 6>
         logic_expression : rel_expression 	<Line : 6-6>
          rel_expression : simple_expression 	<Line : 6-6>
           simple_expression : term 	<Line : 6-6>
            term : unary_expression 	<Line : 6-6>
             unary_expression : factor 	<Line : 6-6>
              factor : variable 	<Line : 6-6>
               variable : ID 	<Line : 6-6>
                ID : x	<Line : 6>
        SEMICOLON : ;	<Line : 6>
     RCURL : }	<Line : 7>
